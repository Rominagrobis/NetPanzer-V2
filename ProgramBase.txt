First understand that we have 3 stages of work .. 

First stage : MasterServer

  Masterserver are a network of 2 or more servers used to register and track games server. 
  
  They have a separate channel of communication, hold a database for themself, gameservers and players.
  
  The communication port used for master to master will be 6060 (arbitrary choose as a free of use channel port)
  
  Online configuration can be hold by a Light http server include in the code at port 8010 (arbitrary)
  
  All comunications between masters and servers , masters and clients, servers and clients will be encrypted using
  the libgcrypt library
  
  In the database, we have 3 tables. 
  
    First table : master_data
          <1> Number     integer
          <2> Name       char
          <3> IP         char
          <4> NetName    char
          <5> last_seen  date
          <6> config     (to be defined)
          
    Second table : server_data
          <1> Number     integer
          <2> Name       char
          <3> IP         char
          <4> NetName    char
          <5> Country    char 
          <6> Admin      char                     (admin mail adress)
          <7> config     (to be defined)
        
   Third table : Client_data
          <1> Number     integer
          <2> User       char             
          <3> IP         char
          <4> NetName    char 
          <5> Country    char
          <6> config     (to be defined)
          
          
 Communication :
  
    I think of different stage of communication.  I name them 'ring'
    
    'ring 0'     is master to master communication at port 6060 
    'ring 1'     is master to game server communication at port 7070 
    'ring 1 bis' is old style communication keep for compatibility (port 28900)
    'ring 2'     is client to master at port 3040 for new style clients
    'ring 2 bis' is client to master at port 3030 for old style compatibility
    
    each ring run in a separate thread. 
    
    
 Configuration :
 
   While it will be a great idea to run in a chroot environment, the config file named by default 'master.ini' may in the user home directory
   in $HOME/.netpanzer/config
   
   Syntax : 
   
     Sections are identified by [] 
     
     options are pair of key and value separated by the sign '=' and followed by a semicolon (;)
     
     comments are identified by # 
     
     
 typical configuration file : 
 
   [network]
     adress = *;            # this mean all interface can be used
     mmport = 6060;         # communication port with other masters
     smport = 7070;         # communication port with game servers
     cmport = 3040;         # communication port with game clients
     osport = 28900;        # communication port old style
     ocport = 3030;         # communication port old style
   [database]
     type = mysql;          # the only database supported first, may be other can be used in the futur
     base = netpanzer;      # the name of the database to store infos
     user = npv2;           # name of user of this database (don't use root for security purpose)
     pass = npv2;	    # password for this user in mysql
     dbip = 127.0.0.1;      # where the database is located (127.0.0.1 is localhost)
     dbport = 3306;         # port to comminicate with database engine (default)
     
   # variables and values are same as old version of masterserver but can change in the futur  
   [game]
     server-alive-timeout = 720;         # time until a server is considered dead
     client-request-timeout = 30;        # time until a clientrequest is aborted
     connection-limit=10 = 10;           # limit of concurrently handled requests
     masterserver-heartbeat-interval=300 # Interval other masterservers are notified that we're still alive
     masterserver-password=xxx           # Password for masterserver heartbeats
     
     
   #   write-back-neighbour-list=no is no more used
   
   [system]
     logfile = /var/log/masterserver.log; # be carefull with the default value in case of chroot ..
     servercachefile = /var/cache/masterserver/neighboors;
     pidfile = /var/run/masterserver.pid; # usefull if other programwant to know if mster still running
     
     